// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { $OpenApiTs } from './types.gen';

export class KvService {
    /**
     * Create Lang
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvCreateLang(data: $OpenApiTs['/api/v1/kv/create_lang']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/create_lang']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/create_lang',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Delete Lang
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvDeleteLang(data: $OpenApiTs['/api/v1/kv/delete_lang']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/delete_lang']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/delete_lang',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Lang List
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvGetLangList(): CancelablePromise<$OpenApiTs['/api/v1/kv/get_lang_list']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/kv/get_lang_list'
        });
    }
    
    /**
     * Update Kv
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvUpdateKv(data: $OpenApiTs['/api/v1/kv/update_kv']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/update_kv']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/update_kv',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Kv Data
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvGetKvData(data: $OpenApiTs['/api/v1/kv/get_kv_data']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/get_kv_data']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/get_kv_data',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Kv Record
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvGetKvRecord(data: $OpenApiTs['/api/v1/kv/get_kv_record']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/get_kv_record']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/get_kv_record',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Delete Kv
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvDeleteKv(data: $OpenApiTs['/api/v1/kv/delete_kv']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/delete_kv']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/delete_kv',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get All Null Value Kv
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvGetAllNullValueKv(data: $OpenApiTs['/api/v1/kv/get_all_null_value_kv']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/get_all_null_value_kv']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/get_all_null_value_kv',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Upload New Lang
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvUploadNewLang(data: $OpenApiTs['/api/v1/kv/upload_new_lang']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/upload_new_lang']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/upload_new_lang',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Gen Ts
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvGenTs(data: $OpenApiTs['/api/v1/kv/gen_ts']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/gen_ts']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/gen_ts',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Merge Check
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static kvMergeCheck(data: $OpenApiTs['/api/v1/kv/merge_check']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/merge_check']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/merge_check',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Upload File
     * @param data The data for the request.
     * @param data.formData
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static kvUploadFile(data: $OpenApiTs['/api/v1/kv/upload-file']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/upload-file']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/kv/upload-file',
            formData: data.formData,
            mediaType: 'multipart/form-data',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Download File
     * @param data The data for the request.
     * @param data.filePath
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static kvDownloadFile(data: $OpenApiTs['/api/v1/kv/download-file/{filePath}']['get']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/download-file/{filePath}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/kv/download-file/{filePath}',
            path: {
                filePath: data.filePath
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Download All With Zip
     * @param data The data for the request.
     * @param data.filename
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static kvDownloadAllWithZip(data: $OpenApiTs['/api/v1/kv/download-all-with-zip/{filename}']['get']['req']): CancelablePromise<$OpenApiTs['/api/v1/kv/download-all-with-zip/{filename}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/kv/download-all-with-zip/{filename}',
            path: {
                filename: data.filename
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
}

export class FeishuService {
    /**
     * Trans Text
     * @param data The data for the request.
     * @param data.sourceLanguage
     * @param data.text
     * @param data.targetLanguage
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static feishuTransText(data: $OpenApiTs['/api/v1/feishu/trans_text']['post']['req']): CancelablePromise<$OpenApiTs['/api/v1/feishu/trans_text']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/feishu/trans_text',
            query: {
                source_language: data.sourceLanguage,
                text: data.text,
                target_language: data.targetLanguage
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
}

export class CommonService {
    /**
     * Get Kv Data
     * @returns ResponseBase Successful Response
     * @throws ApiError
     */
    public static commonGetKvData(): CancelablePromise<$OpenApiTs['/api/v1/common/get_version']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/common/get_version'
        });
    }
    
}

export class IndexService {
    /**
     * Home
     * @returns string Successful Response
     * @throws ApiError
     */
    public static indexHome(): CancelablePromise<$OpenApiTs['/']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/'
        });
    }
    
}