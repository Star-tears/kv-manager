// This file is auto-generated by @hey-api/openapi-ts

export const $Body_kv_upload_file = {
    properties: {
        file: {
            type: 'string',
            format: 'binary',
            title: 'File'
        }
    },
    type: 'object',
    required: ['file'],
    title: 'Body_kv-upload_file'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $KvIdItem = {
    properties: {
        kvId: {
            type: 'integer',
            title: 'Kvid'
        }
    },
    type: 'object',
    required: ['kvId'],
    title: 'KvIdItem'
} as const;

export const $KvItem = {
    properties: {
        key: {
            type: 'string',
            title: 'Key'
        },
        langKey: {
            type: 'string',
            title: 'Langkey'
        },
        value: {
            type: 'string',
            title: 'Value'
        },
        langValue: {
            type: 'string',
            title: 'Langvalue'
        },
        kvId: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Kvid'
        }
    },
    type: 'object',
    required: ['key', 'langKey', 'value', 'langValue'],
    title: 'KvItem'
} as const;

export const $KvRecordItem = {
    properties: {
        langValue: {
            type: 'string',
            title: 'Langvalue'
        },
        kvId: {
            type: 'integer',
            title: 'Kvid'
        }
    },
    type: 'object',
    required: ['langValue', 'kvId'],
    title: 'KvRecordItem'
} as const;

export const $LangKv = {
    properties: {
        langKey: {
            type: 'string',
            title: 'Langkey'
        },
        langValue: {
            type: 'string',
            title: 'Langvalue'
        }
    },
    type: 'object',
    required: ['langKey', 'langValue'],
    title: 'LangKv'
} as const;

export const $LangWithPath = {
    properties: {
        lang: {
            type: 'string',
            title: 'Lang'
        },
        path: {
            type: 'string',
            title: 'Path'
        }
    },
    type: 'object',
    required: ['lang', 'path'],
    title: 'LangWithPath'
} as const;

export const $LanguageItemBase = {
    properties: {
        lang: {
            type: 'string',
            title: 'Lang'
        }
    },
    type: 'object',
    required: ['lang'],
    title: 'LanguageItemBase'
} as const;

export const $ResponseBase = {
    properties: {
        type: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Type',
            default: 'response'
        },
        code: {
            type: 'integer',
            title: 'Code',
            default: 0
        },
        data: {
            title: 'Data'
        }
    },
    type: 'object',
    required: ['data'],
    title: 'ResponseBase'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;